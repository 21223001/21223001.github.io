name: Update HTML from Issue

on:
  issues:
    types: [opened]

permissions:
  contents: write

jobs:
  update-html:
    runs-on: ubuntu-latest

    steps:
      # 1. リポジトリをチェックアウト
      - name: Checkout repository content
        uses: actions/checkout@v3

      # 2. Node.js をセットアップ
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 3. Issue の内容を取得し、labs.json に追加
      - name: Update labs.json with Issue Content
        run: |
          set -e
          set -x

          ISSUE_BODY="${{ github.event.issue.body }}"
          ISSUE_TITLE="${{ github.event.issue.title }}"
          ISSUE_NUMBER="${{ github.event.issue.number }}"

          # labs.json が存在しない、または空の場合は初期化
          if [ ! -s labs.json ]; then
            echo "[]" > labs.json
          fi

          # labs.json が有効な JSON であるか検証
          if ! jq empty labs.json; then
            echo "labs.json が不正な JSON フォーマットです。修正または削除してください。"
            exit 1
          fi

          # 新しい研究室情報を new_lab.json に保存
          jq -n --arg id "$ISSUE_NUMBER" --arg title "$ISSUE_TITLE" --arg body "$ISSUE_BODY" \
            '{id: ($id | tonumber), title: $title, body: $body}' > new_lab.json

          # labs.json に新しい研究室情報を追加
          jq '. += [ input ]' labs.json new_lab.json > updated_labs.json
          if [ $? -ne 0 ]; then
            echo "jq コマンドでエラーが発生しました。"
            exit 1
          fi

          mv updated_labs.json labs.json

      # 4. labs.json から index.html を生成
      - name: Generate index.html from labs.json
        run: |
          set -e
          set -x

          # generate_html.js を作成
          cat << 'EOF' > generate_html.js
          const fs = require('fs');

          try {
            // labs.json からデータを読み込む
            const labsData = JSON.parse(fs.readFileSync('labs.json', 'utf8'));

            // 目次と研究室情報のコンテンツを格納する変数
            let toc = '';
            let labsContent = '';

            labsData.forEach((lab) => {
              const labId = `lab-${lab.id}`;
              const title = lab.title;
              const body = lab.body.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;')
                                   .replace(/"/g, '&quot;').replace(/'/g, '&#39;').replace(/\r\n|\r|\n/g, '<br>');

              // 目次にリンクを追加
              toc += `<li><a href="#${labId}">${title}</a></li>\n`;

              // 研究室情報を追加
              labsContent += `
                <div class="lab-container" id="${labId}">
                  <h2>${title}</h2>
                  <p>${body}</p>
                </div>
              `;
            });

            // 最終的なHTMLを構築
            const htmlContent = `
            <!DOCTYPE html>
            <html lang="ja">
            <head>
              <meta charset="UTF-8">
              <title>研究室情報一覧</title>
              <style>
                /* スタイルシートをここに記述 */
                body { font-family: Arial, sans-serif; }
                .lab-container { margin-bottom: 20px; }
              </style>
            </head>
            <body>
              <h1>研究室情報一覧</h1>
              <h2>目次</h2>
              <ul>
                ${toc}
              </ul>
              <div class="container">
                ${labsContent}
              </div>
            </body>
            </html>
            `;

            // index.html に書き込み
            fs.writeFileSync('index.html', htmlContent);
          } catch (error) {
            console.error("エラーが発生しました:", error);
            process.exit(1);
          }
          EOF

          # Node.js スクリプトを実行
          node generate_html.js

      # 5. 変更をコミットしてプッシュ
      - name: Commit and push changes
        run: |
          set -e
          set -x

          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add index.html labs.json
          git commit -m "Add lab info from Issue #${{ github.event.issue.number }}"
          git push
